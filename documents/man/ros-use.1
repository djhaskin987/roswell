.\" Automatically generated by Pandoc 2.5
.\"
.TH "ros-use" "1" "" "" ""
.hy
.PP
ros\-use \- sets the default implementation used by roswell # synopsis
.PP
\f[B]ros [options] use\f[R] impl[/version]
.PP
impl : The name of an implementation which is already installed.
New implementations can be downloaded by \f[I]ros\-install\f[R](1).
The list of installed implementations is available in
\f[I]ros\-list\f[R](1).
.PP
version: : The version specifier.
The string representation of the version (e.g.\ .) depends on each
implementation and roswell generally follows the representation used by
the implementation.
In addition, \f[I]a special version name \[lq]system\[rq]\f[R] tells
roswell to use the implementation that is installed in your system,
which should be in PATH.
.SH example
.PP
ros use sbcl : use the latest SBCL among several versions of SBCLs
installed by \f[I]ros\-install\f[R].
This is compiled from the source, which may take some time to install
but allows SLIME to jump to the implementation source code.
.PP
ros use sbcl\-bin : use the latest stable SBCL binary downloaded from
vendor\[cq]s website.
Roswell uses this by default.
\f[C]sbcl\-bin\f[R] tends to be an older version compared to
\f[C]sbcl\f[R], but surely newer than your \f[I]apt\-get\f[R] installed
counterpart!
.PP
ros use sbcl/1.3.1 : use the compiled SBCL 1.3.1.
.PP
ros use sbcl\-bin/1.3.1 : use the prebuilt SBCL 1.3.1.
.PP
ros use sbcl/system : use the SBCL available in the PATH.
.PP
ros use ccl : use the CCL compiled from the source.
Same set of version specifiers as for SBCL can be applied.
.PP
Roswell also supports \f[I]abcl\f[R], \f[I]acl\f[R], \f[I]clisp\f[R],
\f[I]cmu\f[R] and \f[I]ecl\f[R].
.SH SEE ALSO
.PP
\f[I]sbcl\f[R](1), \f[I]ros\f[R](1), \f[I]ros\-install\f[R](1),
\f[I]ros\-list\f[R](1)
.SH AUTHORS
Roswell Project Team.
