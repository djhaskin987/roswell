.\" Automatically generated by Pandoc 2.5
.\"
.TH "ros-install" "1" "" "" ""
.hy
.PP
ros\-install \- Install lisp implementations or quicklisp system
.SH Synopsis
.IP \[bu] 2
\f[B]ros install\f[R] system [system \&...]
.IP \[bu] 2
\f[B]ros install\f[R] impl[/version] [param \&...]
.SH Description
.TP
.B system
a name specifying a system.
.TP
.B impl
a name specifying a lisp implementation.
.SH Installing a Lisp Implementation
.PP
When the \f[C]impl\f[R] or \f[C]system\f[R] matches to one of the
supported implementations, it fetches, downloads and installs it to one
of the internal directory managed by roswell (\[ti]/.roswell, or
\f[C]ROSWELL_INSTALL_DIR\f[R]).
In order to use the installed implementation, you have to run
\f[I]ros\-use(1)\f[R].
.PP
For example, the following command downloads the latest sbcl binary from
sbcl.org.
Note that this may be different from the default binary installed by
roswell, called \f[C]sbcl\-bin\f[R].
\f[C]sbcl\-bin\f[R] is a stable and well\-tested version of the sbcl
binary which is supposed to be a little older than the latest sbcl.
.IP
.nf
\f[C]
$ ros install sbcl
\f[R]
.fi
.PP
When invoked without a name, it prints the list of installable
implementations.
(Not to be confused with \f[C]ros list installed\f[R], which shows the
implementations already installed.)
.IP
.nf
\f[C]
Usage: ros install impl [OPTIONS]

For more details on impl specific options, type:
ros help install impl

Candidates impls for installation are:
ecl
sbcl
clisp
ccl\-bin
sbcl\-bin
\f[R]
.fi
.PP
The name can be optionally followed by a slash \f[C]/\f[R] and a version
of the implementation.
.IP
.nf
\f[C]
$ ros install sbcl/1.2.14
\f[R]
.fi
.PP
There might be some \f[I]hidden\f[R] implementation that are not listed
here \[em] they are in the alpha quality, but try the one you like or
watch the website (https://github.com/roswell/roswell).
.IP
.nf
\f[C]
$ ros install ccl
$ ros install abcl
$ ...
\f[R]
.fi
.SH Installing a quicklisp system and the bundled roswell scripts
.PP
If the specified name does not match any of the implementations, roswell
tries to find a quicklisp system of the given name.
.IP
.nf
\f[C]
$ ros install alexandria
\f[R]
.fi
.PP
After compiling and loading the system, it funcalls
\f[C]ros:*build\-hook*\f[R] special variable with no argument, if some
function is set during the compilation/load.
.PP
When the system comes with a \f[B]roswell script\f[R] created by
\f[I]ros\-init\f[R](1) in the subdirectory \f[C]roswell\f[R], they are
installed into \f[B]ROSWELL_INSTALL_DIR/bin\f[R].
Setting the path to this directory makes those scripts available from
the shell command line.
.IP
.nf
\f[C]
$ ros install qlot
System \[aq]qlot\[aq] found. Loading the system..
Processing build\-hook..
Found 1 scripts: qlot
Attempting to install the scripts in roswell/ subdirectory of the system...
/home/user/.roswell/bin/qlot

$ qlot
Usage: qlot [install | update | bundle | exec shell\-args..]
\f[R]
.fi
.SH SEE ALSO
.PP
\f[I]sbcl\f[R](1), \f[I]ros\f[R](1), \f[I]ros\-list\f[R](1),
\f[I]ros\-init\f[R](1)
.SH AUTHORS
Roswell Project Team.
